#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ This\ class\ represents\ a\ room\ in\ the\ game\ with\ exits,\ items,\ characters,\ and\ doors\ /\ trapdoors.\r\n\ \ \ \ \r\n\ @author\ Pierre\ MATAR\r\n
comment1.params=pName\ pDescription\ pImage
comment1.target=Room(java.lang.String,\ java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Constructor\ for\ the\ room,\ initializes\ the\ description,\ exits,\ and\ items.\r\n\ \r\n\ @param\ pName\ The\ name\ of\ the\ room.\r\n\ @param\ pDescription\ A\ brief\ description\ of\ the\ room.\r\n\ @param\ pImage\ The\ image\ name\ associated\ with\ the\ room.\r\n
comment10.params=
comment10.target=java.lang.String\ getImageName()
comment10.text=\r\n\ @return\ The\ image\ file\ name.\r\n
comment11.params=pRoom
comment11.target=boolean\ isExit(Room)
comment11.text=\r\n\ Checks\ if\ a\ given\ room\ is\ one\ of\ the\ exits\ from\ the\ current\ room.\r\n\ \r\n\ @param\ pRoom\ The\ room\ to\ check.\r\n\ @return\ True\ if\ the\ specified\ room\ is\ an\ exit,\ otherwise\ false.\r\n
comment12.params=pDirection
comment12.target=boolean\ isTrapDoor(java.lang.String)
comment12.text=\r\n\ Checks\ if\ the\ exit\ in\ a\ specified\ direction\ is\ a\ trap\ door.\r\n\ \r\n\ @param\ pDirection\ The\ direction\ to\ check.\r\n\ @return\ True\ if\ the\ exit\ is\ a\ trap\ door;\ otherwise,\ false.\r\n
comment13.params=pDirection
comment13.target=boolean\ isLockedDoor(java.lang.String)
comment13.text=\r\n\ Checks\ if\ the\ exit\ in\ a\ specified\ direction\ is\ a\ locked\ door.\r\n\ \r\n\ @param\ pDirection\ The\ direction\ to\ check.\r\n\ @return\ True\ if\ the\ exit\ is\ a\ locked\ door,\ otherwise\ false.\r\n
comment14.params=pDirection
comment14.target=java.lang.String\ getDoorKeyItemName(java.lang.String)
comment14.text=\r\n\ @param\ pDirection\ The\ direction\ of\ the\ door.\r\n\ @return\ The\ name\ of\ the\ key\ item\ required\ to\ open\ the\ door,\ or\ null\ if\ no\ key\ is\ required.\r\n
comment15.params=pDirection
comment15.target=void\ removeDirection(java.lang.String)
comment15.text=\r\n\ Removes\ an\ exit\ in\ the\ specified\ direction.\r\n\ \r\n\ @param\ pDirection\ The\ direction\ to\ remove.\r\n
comment16.params=pItem
comment16.target=void\ addItem(src.pkg_items.Item)
comment16.text=\r\n\ Adds\ an\ item\ to\ the\ room.\r\n\ \r\n\ @param\ pItem\ The\ item\ to\ add\ to\ the\ room.\r\n
comment17.params=pItemName
comment17.target=src.pkg_items.Item\ getItem(java.lang.String)
comment17.text=\r\n\ Retrieves\ an\ item\ from\ the\ room\ based\ on\ its\ name.\r\n\ \r\n\ @param\ pItemName\ The\ name\ of\ the\ item\ to\ retrieve.\r\n\ @return\ The\ item\ if\ it\ exists\ in\ the\ room;\ otherwise,\ null.\r\n
comment18.params=pItemName
comment18.target=void\ removeItem(java.lang.String)
comment18.text=\r\n\ Removes\ an\ item\ from\ the\ room\ based\ on\ its\ name.\r\n\ \r\n\ @param\ pItemName\ The\ name\ of\ the\ item\ to\ remove.\r\n
comment19.params=pCharacter
comment19.target=void\ addCharacter(src.pkg_models.Characterr)
comment19.text=\r\n\ Adds\ a\ character\ to\ the\ room.\r\n\ \r\n\ @param\ pCharacter\ The\ character\ to\ add.\r\n
comment2.params=
comment2.target=java.lang.String\ getDescription()
comment2.text=\r\n\ @return\ A\ string\ representing\ the\ description\ of\ the\ room.\r\n
comment20.params=pCharacter
comment20.target=void\ removeCharacter(src.pkg_models.Characterr)
comment20.text=\r\n\ Removes\ a\ character\ from\ the\ room.\r\n\ \r\n\ @param\ pCharacter\ The\ character\ to\ remove.\r\n
comment21.params=pCharacterName
comment21.target=src.pkg_models.Characterr\ getCharacter(java.lang.String)
comment21.text=\r\n\ Retrieves\ a\ character\ from\ the\ room\ by\ name.\r\n\ \r\n\ @param\ pCharacterName\ The\ name\ of\ the\ character\ to\ retrieve.\r\n\ @return\ The\ character\ if\ found,\ otherwise\ null.\r\n
comment22.params=
comment22.target=java.util.Collection\ getCharacters()
comment22.text=\r\n\ @return\ A\ collection\ of\ characters\ in\ the\ room.\r\n
comment3.params=
comment3.target=java.lang.String\ getName()
comment3.text=\r\n\ @return\ The\ name\ of\ the\ room.\r\n
comment4.params=pDirection
comment4.target=Room\ getExit(java.lang.String)
comment4.text=\r\n\ @param\ pDirection\ The\ direction\ of\ the\ exit\ (e.g.,\ "north",\ "south").\r\n\ @return\ The\ room\ in\ the\ specified\ direction,\ or\ null\ if\ there\ is\ no\ exit\ in\ that\ direction.\r\n
comment5.params=
comment5.target=java.lang.String\ getExitString()
comment5.text=\r\n\ @return\ A\ string\ listing\ all\ exits\ (e.g.,\ "Exits\:\ north\ south\ west").\r\n
comment6.params=
comment6.target=java.lang.String\ getCharactersString()
comment6.text=\r\n\ @return\ A\ string\ listing\ the\ names\ of\ all\ characters\ in\ the\ room,\ or\ an\ empty\ string\ if\ no\ characters\ are\ present.\r\n
comment7.params=
comment7.target=java.lang.String\ getLongDescription()
comment7.text=\r\n\ @return\ A\ detailed\ string\ description\ of\ the\ room.\r\n
comment8.params=pDirection\ pNeighbor\ pIsLocked\ pKeyDoor\ pIsTrapDoor
comment8.target=void\ setExit(java.lang.String,\ Room,\ boolean,\ src.pkg_items.Item,\ boolean)
comment8.text=\r\n\ Sets\ an\ exit\ in\ a\ given\ direction,\ specifying\ whether\ it\ is\ a\ locked\ door\ or\ a\ trapdoor.\r\n\ \r\n\ @param\ pDirection\ The\ direction\ of\ the\ exit.\r\n\ @param\ pNeighbor\ The\ neighboring\ room\ in\ the\ specified\ direction.\r\n\ @param\ pIsLocked\ True\ if\ the\ door\ is\ locked,\ otherwise\ false.\r\n\ @param\ pKeyDoor\ The\ key\ item\ required\ to\ open\ the\ door,\ or\ null\ if\ not\ needed.\r\n\ @param\ pIsTrapDoor\ True\ if\ the\ exit\ is\ a\ trapdoor,\ otherwise\ false.\r\n
comment9.params=pDirection\ pNeighbor
comment9.target=void\ setExit(java.lang.String,\ Room)
comment9.text=\r\n\ Sets\ an\ exit\ in\ a\ given\ direction\ without\ specifying\ trap\ door\ status.\r\n\ By\ default,\ the\ exit\ is\ not\ a\ trap\ door.\r\n\ \r\n\ @param\ pDirection\ The\ direction\ of\ the\ exit.\r\n\ @param\ pNeighbor\ \ The\ neighboring\ room\ in\ the\ specified\ direction.\r\n
numComments=23
